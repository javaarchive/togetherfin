import type { Route } from "./+types/home";
import { Welcome } from "../welcome/welcome";
import { useEffect, useState } from "react";

import {DiscordSDK} from '@discord/embedded-app-sdk';
import { apiPath } from "~/lib/utils";
import cryptoHelper from "~/lib/crypto";

export function meta({}: Route.MetaArgs) {
  return [
    { title: "New React Router App" },
    { name: "description", content: "Welcome to React Router!" },
  ];
}

export default function Home() {
  
  let [isMagic, setIsMagic] = useState(false);
  
  // ugly discord magic stolen from example docs rq
  async function init(){
    const discordSdk = new DiscordSDK(import.meta.env.VITE_DISCORD_CLIENT_ID, {
      disableConsoleLogOverride: false
    });

    try{
      await discordSdk.ready();
      // @ts-ignore
      window["dsdk"] = discordSdk; // sandbox test
      // https://discord.com/developers/docs/developer-tools/embedded-app-sdk#authorize
      console.log("send authorize", import.meta.env.VITE_DISCORD_CLIENT_ID);
      const auth = await discordSdk.commands.authorize({
        client_id: import.meta.env.VITE_DISCORD_CLIENT_ID,
        response_type: "code",
        state: "",
        prompt: "none",
        scope: [
          // "applications.builds.upload",
          // "applications.builds.read",
          // "applications.store.update",
          // "applications.entitlements",
          // "bot",
          "identify",
          // "connections",
          // "email",
          // "gdm.join",
          "guilds",
          // "guilds.join",
          // "guilds.members.read",
          // "messages.read",
          // "relationships.read",
          // 'rpc.activities.write',
          // "rpc.notifications.read",
          // "rpc.voice.write",
          // "rpc.voice.read",
          // "webhook.incoming",
          // for running in DMs for some reason
          // "dm_channels.read"
        ],
      });

      console.log("authorize", auth);

      const resp = await fetch(apiPath("/api/discord"), {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          code: auth.code
        })
      });

      console.log("discord access token resp ok", resp.ok, resp.status);


      if(!resp.ok){
        throw new Error("Failed to get discord token: " + (await resp.text()));
      }
      const json: any = await resp.json();
      if(!json.ok){
        throw new Error("Failed to get discord token (response not ok): " + json.error);
      }
      console.log("got discord token", json);

      await discordSdk.commands.authenticate({
        access_token: json.access_token
      })

      const channel = await discordSdk.commands.getChannel({
        channel_id: discordSdk.channelId || "",
      });
      console.log("channel", channel);
      setIsMagic(true);
      // redirec to autogenerated
      location.href = "/room/" + channel.guild_id + "_" + channel.id + "#" + (await cryptoHelper.hashString(channel.topic || channel.name || ""));
    }catch(ex){
      console.warn("Failed to initialize discord sdk", ex);
    }
  }

  useEffect(() => {
    
    init();
  }, [])
  
  return <>
    {isMagic && <div className="text-default m-auto max-w-xl">Doing some magic to route you to a room automatically for the activity.</div>}
    {!isMagic && <Welcome />}
  </>;
}
